require 'rubygems'
require 'popen4'

class JmeterWorker < Struct.new(:jmeter_run_id)

  def perform
    @jr_id = jmeter_run_id
    jmeter_obj = JmeterRun.find(@jr_id)
    if jmeter_obj.locked?
     puts 'DEBUG: ...got lock'
    else
      jmeter_obj.locked = true
      jmeter_obj.save
      jmeter_bin = Yetting.jmeter_bin_path + "/jmeter -n"
      jmeter_command = jmeter_bin + ' ' + get_jmeter_opts
      puts  "DEBUG: fireing " + jmeter_command
      status = 
      POpen4::popen4(jmeter_command) do |stdout, stderr, stdin, pid|
        jmeter_obj.jmeter_pid = pid
        jmeter_obj.stderror = stderr.read.strip
        jmeter_obj.stdout = stdout.read.strip
        jmeter_obj.save
      end
      if status.exitstatus == 0 and !status.nil?
        jmeter_obj.finish
        puts  'INFO: jmeter_obj has finished with ' + status.inspect
      else
        puts 'ERROR: jmeter_obj has failed'
        jmeter_obj.fatal_error
      end
    end
  end

  def get_jmeter_opts
    project = JmeterRun.find(@jr_id).project
    project_name = project.name
    jtl_file = "/" + project_name + "_" + Time.now.to_i.to_s + ".jtl"
    jmx_file = project.setting.jmx_file || project_name + ".jmx"
    opts_field =  project.setting.ext_opts || ""
    return opt_string =
    " -t " + Yetting.jmeter_jmx_path + jmx_file +
    " -l " + Yetting.jmeter_jtl_path + jtl_file +
    " -j " + Yetting.jmeter_log +
    " " + opts_field
  end

end
